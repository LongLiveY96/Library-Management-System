<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.library.dao.LendDao">
    <resultMap id="BaseResultMap" type="com.library.bean.Lend">
        <id column="ser_num" property="serNum" jdbcType="DECIMAL"/>
        <result column="book_id" property="bookId" jdbcType="DECIMAL"/>
        <result column="reader_id" property="readerId" jdbcType="DECIMAL"/>
        <result column="lend_date" property="lendDate" jdbcType="DATE"/>
        <result column="back_date" property="backDate" jdbcType="DATE"/>
        <result column="book_name" property="bookName" jdbcType="VARCHAR"/>
        <result column="limit_day" property="limitDay" jdbcType="DECIMAL"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
    </resultMap>
    <select id="countBook" parameterType="long" resultType="int">
        SELECT
               CASE
                   WHEN COUNT(ll.book_id) >= rr.borrow_num THEN '0'
                   ELSE '1'
                       END status
        FROM reader_card rc
                 LEFT JOIN lend_list ll ON rc.reader_id = ll.reader_id
                 LEFT JOIN reader_role rr ON rr.role_id = rc.role_id
        WHERE rc.reader_id = #{reader_id}
          and ll.back_date is null
    </select>
    <select id="checkReader" parameterType="long" resultType="int">
        SELECT
               count(*)
        FROM
             lend_list
        where `status` in (2,3) and reader_id = #{reader_id}
    </select>
    <update id="returnBookOne">
        update lend_list
        set back_date = sysdate(),
            status    = case
                            when datediff(NOW(), lend_date) > limit_day THEN '3'
                            ELSE '1'
                    END
        where book_id = #{book_id}
          and reader_id = #{reader_id}
          and back_date is null
    </update>
    <update id="returnBookTwo" parameterType="long">
        update book_info
        set number = number + 1
        where book_id = #{book_id}
    </update>
    <update id="doLend" parameterType="long">
        update lend_list
        set status = '1'
        where ser_num = #{ser_num}
    </update>
    <insert id="lendBookOne">
        insert into lend_list
        values (null, #{book_id}, #{reader_id}, sysdate(), null, (select limit_day
                                                                  from reader_role rr
                                                                           left join reader_card rc
                                                                               on rc.role_id = rr.role_id
                                                                  where rc.reader_id = #{reader_id}), '0')
    </insert>
    <update id="lendBookTwo" parameterType="long">
        update book_info
        set number = number - 1
        where book_id = #{book_id}
    </update>
    <select id="lendList" resultMap="BaseResultMap">
        select *, bi.name as bookName
        from lend_list ll
                 left join book_info bi on bi.book_id = ll.book_id
        order by ll.status desc
    </select>
    <select id="myLendList" resultMap="BaseResultMap" parameterType="long">
        select ll.*, bi.name as bookName
        from lend_list ll
                 left join book_info bi on bi.book_id = ll.book_id
        where ll.reader_id = #{reader_id}
        order by ll.status desc
    </select>
    <delete id="deleteLend" parameterType="long">
        delete
        from lend_list
        where ser_num = #{ser_num}
    </delete>
    <select id="selectOne" resultMap="BaseResultMap" parameterType="long">
        select ll.*, bi.name as bookName
        from lend_list ll
        left join book_info bi on bi.book_id = ll.book_id
        where ser_num = #{ser_num}
    </select>
    <insert id="addBadList">
        insert into punishment
        values (null, #{serNum}, #{bookId}, #{readerId}, #{lendDate},#{backDate},
                (datediff(#{backDate}, #{lendDate})-#{limitDay}))
    </insert>
</mapper>